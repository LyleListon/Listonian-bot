ARBITRAGE BOT SYSTEM ARCHITECTURE
===============================

+-------------------+          +----------------------+
|                   |          |                      |
|      USER         |◄────────►|  CONFIGURATION       |
|                   |          |                      |
+--------▲----------+          +-----------▲----------+
         │                                 │
         │                                 │
         │                                 │
         │                                 │
+--------▼--------------------------+      │      +---------------------------+
|                                   |      │      |                           |
|                                   |      │      |                           |
|     ARBITRAGE BOT                 |◄─────┘      |      DASHBOARD            |
|                                   |             |                           |
|  +--------------------------+     |             |  +---------------------+  |
|  |                          |     |             |  |                     |  |
|  |  DEX Manager             |     |             |  |  Old Dashboard      |  |
|  |  - BaseSwap              |     |             |  |  - Uses Bot's Web3  |  |
|  |  - PancakeSwap           |     |             |  |  - Direct coupling  |  |
|  |  - SwapBased             |◄────┼─────────────┼──┤                     |  |
|  |  - RocketSwap            |     │             |  +---------------------+  |
|  |                          |     │             |                           |
|  +--------------------------+     │             |  +---------------------+  |
|                                   │             |  |                     |  |
|  +--------------------------+     │             |  |  New Dashboard      |  |
|  |                          |     │             |  |  - Independent Web3 |  |
|  |  Web3 Manager            |◄────┼─────────────┼──┤  - Loose coupling   |  |
|  |  - Blockchain connection |     │             |  |                     |  |
|  |  - Transaction handling  |     │             |  +---------------------+  |
|  |                          |     │             |                           |
|  +--------------------------+     │             +---------------------------+
|                                   │                          ▲
|  +--------------------------+     │                          │
|  |                          |     │                          │
|  |  MEV Protection          |     │                          │
|  |  - Flashbots integration |     │                          │
|  |  - Bundle submission     |     │                          │
|  |                          |     │                          │
|  +--------------------------+     │                          │
|                                   │                          │
|  +--------------------------+     │                          │
|  |                          |     │                          │
|  |  Flash Loan Manager      |     │                          │
|  |  - Capital efficiency    |     │                          │
|  |  - Multi-token support   |     │                          │
|  |                          |     │                          │
|  +--------------------------+     │                          │
|                                   │                          │
|  +--------------------------+     │                          │
|  |                          |     │                          │
|  |  Path Finder             |     │                          │
|  |  - Arbitrage paths       |     │                          │
|  |  - Profit calculation    |     │                          │
|  |                          |     │                          │
|  +--------------------------+     │                          │
|                                   │                          │
|  +--------------------------+     │                          │
|  |                          |     │                          │
|  |  Balance Allocator       |     │                          │
|  |  - Dynamic allocation    |     │                          │
|  |  - Position sizing       |     │                          │
|  |                          |     │                          │
|  +--------------------------+     │                          │
|                                   │                          │
+-----------------------------------+                          │
                    │                                          │
                    │                                          │
                    ▼                                          │
+-----------------------------------+                          │
|                                   |                          │
|  LOGS & DATA STORAGE              |◄─────────────────────────┘
|  - Performance metrics            |
|  - Transaction history            |
|  - Market data                    |
|                                   |
+-----------------------------------+
                    │
                    │
                    ▼
+-----------------------------------+
|                                   |
|  BLOCKCHAIN (Base Network)        |
|  - DEXes                          |
|  - Smart contracts                |
|  - Transactions                   |
|                                   |
+-----------------------------------+

COMMUNICATION PATHS
==================

1. Direct Component Access (Old Dashboard)
   User → Old Dashboard → Bot's Web3Manager → Blockchain
   
2. Independent Implementation (New Dashboard)
   User → New Dashboard → (Direct Web3) → Blockchain
   
3. Shared Resources
   Bot → Logs/Data → Dashboards
   User → Configuration → Bot/Dashboards

KEY DIFFERENCES
==============

OLD DASHBOARD                    NEW DASHBOARD
-------------                    -------------
✗ Tight coupling                 ✓ Loose coupling
✗ Depends on bot components      ✓ Independent implementation
✗ Complex dependencies           ✓ Minimal dependencies
✗ Shared in-memory state         ✓ File-based communication
✗ Single point of failure        ✓ Fault isolation
✗ Slower startup                 ✓ Faster startup
✗ Higher memory usage            ✓ Lower memory usage