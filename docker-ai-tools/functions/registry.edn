{:registry [{:name "gh-repo-create",
             :description "GitHub CLI",
             :parameters {:type "object",
                          :properties {:org {:type "string",
                                             :description "the name of the github organization"},
                                       :name {:type "string",
                                              :description "the name of the new GitHub repository"},
                                       :public {:type "boolean",
                                                :description "whether the new repository should be public or not"}}},
             :container {:image "vonwig/github-cli:latest",
                         :entrypoint ["entrypoint"],
                         :command ["repo-create"],
                         :env {:GITHUB_TOKEN ""}}}
            {:name "analyze_project",
             :description "Analyze a project to determine how it should be built",
             :type "prompt",
             :ref "github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/project_type"}
            {:name "write_files",
             :description "Write a set of files to my project",
             :parameters {:type "object",
                          :properties {:files {:type "array",
                                               :items {:type "object",
                                                       :properties {:path {:type "string",
                                                                           :description "the relative path to the file that should be written"},
                                                                    :content {:type "string",
                                                                              :description "the content that should be written to a file"},
                                                                    :executable {:type "boolean",
                                                                                 :description "whether to make the file executable"}}}}}},
             :container {:image "vonwig/function_write_files:latest",
                         :command ["{{raw|safe}}"]}}
            {:name "docker_scout_tag_recommendation",
             :description "get a recommended tag",
             :parameters {:type "object",
                          :properties {:repository {:type "string",
                                                    :description "the name docker image repository"}}},
             :container {:image "vonwig/docker_scout_tag_recommendation:latest",
                         :command ["{{raw|safe}}"]}}
            {:name "pr-create",
             :description "create a new pull request",
             :parameters {:type "object",
                          :properties {:title {:type "string",
                                               :description "the title of the pull request"},
                                       :body {:type "string",
                                              :description "the body of the pull request"}}},
             :container {:env {:GITHUB_TOKEN ""},
                         :image "vonwig/github-cli:latest",
                         :command ["{{raw|safe}}"]}}
            {:name "findutils-by-name",
             :description "find files in a project by name",
             :parameters {:type "object",
                          :properties {:glob {:type "string",
                                              :description "the glob pattern for files that should be found"}}},
             :container {:image "vonwig/findutils:latest",
                         :command ["{{raw|safe}}" "find" "." "-name"]}}
            {:name "codescope",
             :description "run codescope on a project",
             :parameters {:type "object",
                          :properties {:path {:type "string",
                                              :description "the file path"}}},
             :container {:image "vonwig/codescope:latest",
                         :command ["{{raw|safe}}"]}}
            {:name "read-file",
             :description "read a file",
             :parameters {:type "object",
                          :properties {:path {:type "string",
                                              :description "the file path"}}},
             :container {:image "vonwig/bb:latest",
                         :command ["{{raw|safe}}"
                                   "(slurp (:path args))"]}}
            {:name "sqlite",
             :description "run the sqlite command",
             :parameters {:type "object",
                          :properties {:database {:type "string",
                                                  :description "the path to the database"},
                                       :sql {:type "string",
                                             :description "the sql statement to run"}}},
             :container {:image "vonwig/sqlite:latest",
                         :command ["{{database}}" "{{sql|safe}}"]}}
            {:name "run-javascript-sandbox",
             :description "execute javascript code",
             :parameters {:type "object",
                          :properties {:javascript {:type "string",
                                                    :description "the javascript code to run"}}},
             :container {:image "vonwig/javascript-runner",
                         :command ["{{javascript|safe}}"]}}
            {:name "delete_folder",
             :description "Runs rm -rf on a folder",
             :parameters {:type "object",
                          :properties {:path {:type "string",
                                              :description "Path of the folder to delete"}}},
             :container {:image "vonwig/bash_alpine",
                         :command ["rm -rf {{path|safe}}"]}}
            {:name "cat_file",
             :description "Runs cat on a file",
             :parameters {:type "object",
                          :properties {:path {:type "string",
                                              :description "Path of the folder to delete"}}},
             :container {:image "vonwig/bash_alpine",
                         :command ["cat {{path|safe}}"]}}
            {:name "docker_best_practices",
             :description "get docker best practices for a tech stack",
             :parameters {:type "object",
                          :properties {:stack {:type "string",
                                               :description "the tech stack to get best practices for"}}},
             :container {:image "vonwig/docker-rag:latest",
                         :command ["{{raw|safe}}"]}}]}
