[pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test markers
markers =
    async_test: mark test as async test
    integration: mark test as integration test
    unit: mark test as unit test
    core: mark test as core functionality test
    dex: mark test as DEX-related test
    monitoring: mark test as monitoring-related test
    performance: mark test as performance test
    security: mark test as security test

# Test selection
# Run integration tests separately: pytest -m "integration"
# Run unit tests: pytest -m "unit"
# Run specific feature tests: pytest -m "dex"

# Coverage configuration
addopts = 
    --verbose
    --strict-markers
    --cov=arbitrage_bot
    --cov-report=term-missing
    --cov-report=html
    --no-cov-on-fail

# Coverage settings
[coverage:run]
branch = True
source = arbitrage_bot

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

# Environment variables
env =
    PYTHONPATH=.
    PYTHONWARNINGS=ignore
    PYTEST_DISABLE_PLUGIN_AUTOLOAD=True

# Custom settings
[arbitrage_bot]
test_network = base-testnet
test_rpc_url = https://testnet.base.org
test_chain_id = 84531
test_block_time = 2
test_confirmation_blocks = 1
